//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DSA_Assignment1_Sit1.FaultServ {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FaultServ.IFault")]
    public interface IFault {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/GetAllFaults", ReplyAction="http://tempuri.org/IFault/GetAllFaultsResponse")]
        Common.Fault[] GetAllFaults();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/GetAllFaultLogs", ReplyAction="http://tempuri.org/IFault/GetAllFaultLogsResponse")]
        Common.FaultLog[] GetAllFaultLogs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/GetAllFaultLogsByFaultID", ReplyAction="http://tempuri.org/IFault/GetAllFaultLogsByFaultIDResponse")]
        Common.FaultLog[] GetAllFaultLogsByFaultID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/AddFault", ReplyAction="http://tempuri.org/IFault/AddFaultResponse")]
        void AddFault(Common.Fault fault);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/AddFaultLog", ReplyAction="http://tempuri.org/IFault/AddFaultLogResponse")]
        void AddFaultLog(Common.FaultLog faultLog);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/GenerateRandomNumber", ReplyAction="http://tempuri.org/IFault/GenerateRandomNumberResponse")]
        int GenerateRandomNumber();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/GetFaultByTicketNumber", ReplyAction="http://tempuri.org/IFault/GetFaultByTicketNumberResponse")]
        Common.Fault GetFaultByTicketNumber(int num);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/GetFaultsByAccountID", ReplyAction="http://tempuri.org/IFault/GetFaultsByAccountIDResponse")]
        Common.Fault[] GetFaultsByAccountID(int aID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/GetFaultByID", ReplyAction="http://tempuri.org/IFault/GetFaultByIDResponse")]
        Common.Fault GetFaultByID(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/GetFaultLogsByDate", ReplyAction="http://tempuri.org/IFault/GetFaultLogsByDateResponse")]
        Common.FaultLog[] GetFaultLogsByDate(System.DateTime from, System.DateTime to);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/GetFaultsByAllThreeCombinations", ReplyAction="http://tempuri.org/IFault/GetFaultsByAllThreeCombinationsResponse")]
        Common.FaultLog[] GetFaultsByAllThreeCombinations(int aID, int fID, System.DateTime fromdate, System.DateTime todate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/GetFaultsByAccountIDandProductID", ReplyAction="http://tempuri.org/IFault/GetFaultsByAccountIDandProductIDResponse")]
        Common.Fault[] GetFaultsByAccountIDandProductID(int aID, int pID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/sortByDateAsc", ReplyAction="http://tempuri.org/IFault/sortByDateAscResponse")]
        Common.FaultLog[] sortByDateAsc();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFault/sortByDateDesc", ReplyAction="http://tempuri.org/IFault/sortByDateDescResponse")]
        Common.FaultLog[] sortByDateDesc();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFaultChannel : DSA_Assignment1_Sit1.FaultServ.IFault, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FaultClient : System.ServiceModel.ClientBase<DSA_Assignment1_Sit1.FaultServ.IFault>, DSA_Assignment1_Sit1.FaultServ.IFault {
        
        public FaultClient() {
        }
        
        public FaultClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FaultClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FaultClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FaultClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Common.Fault[] GetAllFaults() {
            return base.Channel.GetAllFaults();
        }
        
        public Common.FaultLog[] GetAllFaultLogs() {
            return base.Channel.GetAllFaultLogs();
        }
        
        public Common.FaultLog[] GetAllFaultLogsByFaultID(int id) {
            return base.Channel.GetAllFaultLogsByFaultID(id);
        }
        
        public void AddFault(Common.Fault fault) {
            base.Channel.AddFault(fault);
        }
        
        public void AddFaultLog(Common.FaultLog faultLog) {
            base.Channel.AddFaultLog(faultLog);
        }
        
        public int GenerateRandomNumber() {
            return base.Channel.GenerateRandomNumber();
        }
        
        public Common.Fault GetFaultByTicketNumber(int num) {
            return base.Channel.GetFaultByTicketNumber(num);
        }
        
        public Common.Fault[] GetFaultsByAccountID(int aID) {
            return base.Channel.GetFaultsByAccountID(aID);
        }
        
        public Common.Fault GetFaultByID(int id) {
            return base.Channel.GetFaultByID(id);
        }
        
        public Common.FaultLog[] GetFaultLogsByDate(System.DateTime from, System.DateTime to) {
            return base.Channel.GetFaultLogsByDate(from, to);
        }
        
        public Common.FaultLog[] GetFaultsByAllThreeCombinations(int aID, int fID, System.DateTime fromdate, System.DateTime todate) {
            return base.Channel.GetFaultsByAllThreeCombinations(aID, fID, fromdate, todate);
        }
        
        public Common.Fault[] GetFaultsByAccountIDandProductID(int aID, int pID) {
            return base.Channel.GetFaultsByAccountIDandProductID(aID, pID);
        }
        
        public Common.FaultLog[] sortByDateAsc() {
            return base.Channel.sortByDateAsc();
        }
        
        public Common.FaultLog[] sortByDateDesc() {
            return base.Channel.sortByDateDesc();
        }
    }
}
