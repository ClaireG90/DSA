@model DSA_Assignment1_Sit1.Models.RegistrationModel

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Registration Form</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<p>
    @ViewBag.Token
</p>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Details</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Surname)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Surname)
            @Html.ValidationMessageFor(model => model.Surname)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Mobile)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Mobile)
            @Html.ValidationMessageFor(model => model.Mobile)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ResidenceName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ResidenceName)
            @Html.ValidationMessageFor(model => model.ResidenceName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.StreetName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.StreetName)
            @Html.ValidationMessageFor(model => model.StreetName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.user.Town)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.user.TownID, Model.countryList)
            @Html.ValidationMessageFor(model => model.user.TownID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.user.Town)
        </div>
        <div class="editor-field">
            @Html.DropDownListFor(model => model.user.TownID, Model.townList)
            @Html.ValidationMessageFor(model => model.user.TownID)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Username)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Username)
            @Html.ValidationMessageFor(model => model.Username)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.PIN)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.PIN)
            @Html.ValidationMessageFor(model => model.PIN)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.roles)
        </div>
        <div class="editor-field">
            @for (int i = 0; i < Model.roles.Count; i++)
            {
                @Html.CheckBoxFor(m => m.checkboxes[i].Checked)
                @Html.HiddenFor(m => m.roles[i].ID)
                @Html.DisplayFor(m => m.roles[i].Name)
            }
        </div>

        <p>
            <input type="submit" value="Register" />
        </p>
    </fieldset>
}

